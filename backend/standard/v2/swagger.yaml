openapi: 3.1.1

info:
  title: Syrup API Standard
  description: A standardized interface for coupon code providers to integrate with the Syrup browser extension.
  version: 2.0.0

servers:
  - url: "https://api.discountdb.ch"
    description: "Primary API endpoint"

tags:
  - name: system
    description: System-level information and status
  - name: coupons
    description: Coupon management and reporting
  - name: merchants
    description: Merchant information and suggestions
  - name: autofill
    description: Domain-specific autofill configurations

paths:
  /syrup/v2/info:
    get:
      summary: Provider info
      description: Retrieves information about the providers implementation
      tags:
        - system
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /syrup/v2/coupons:
    get:
      summary: Search for coupons
      description: Search for coupons with filtering, sorting and pagination
      tags:
        - coupons
      parameters:
        - name: q
          in: query
          schema:
            type: string
          description: Search query string

        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20

        - name: cursor
          in: query
          schema:
            type: string
          description: |
            Cursor for pagination. Use the next_cursor from the previous response to get the next page.
            Omit this parameter for the first page.
          example: eyJpZCI6MTAwfQ==

        - name: filterBy
          description: |
            Filter coupons using query parameters. All filters are optional. Supports these formats:  

            1. Simple Values:  
              `?filterBy[merchant_id]=123`  
              `?filterBy[store_type]=online`  

            2. Arrays (use [] suffix):  
              `?filterBy[categories][]=food&filterBy[categories][]=drinks`  
              Creates array: [food, drinks]  

            3. Numeric Ranges (use comma-separated values):  
              `?filterBy[discount_value]=10,50`    # Between 10 and 50  
              `?filterBy[discount_value]=10,`      # 10 or more  
              `?filterBy[discount_value]=,50`      # Up to 50  

            4. Date Ranges (YYYY-MM-DD format):  
              `?filterBy[end_date]=2024-01-01,2024-12-31`    # Between dates  
              `?filterBy[end_date]=2024-01-01,`              # After date  
              `?filterBy[end_date]=,2024-12-31`              # Before date  

            Examples:  
            - Find food coupons with 20-50% off:  
              `?filterBy[categories][]=food&filterBy[discount_value]=20,50&filterBy[discount_type]=PERCENTAGE_OFF`  
            
            - Find valid online coupons:  
              `?filterBy[store_type]=online&filterBy[is_expired]=false`
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              # Numeric ranges (format: "min,max", ",max", or "min,")
              discount_value:
                type: string
                pattern: '^(\d*\.?\d+)?,(\d*\.?\d+)?$'
                example: "10,50"
              minimum_purchase_amount:
                type: string
                pattern: '^(\d*\.?\d+)?,(\d*\.?\d+)?$'
              maximum_discount_amount:
                type: string
                pattern: '^(\d*\.?\d+)?,(\d*\.?\d+)?$'

              # Date ranges (format: "date1,date2", ",date2", or "date1,")
              created_at:
                type: string
                pattern: '^(\d{4}-\d{2}-\d{2})?,(\d{4}-\d{2}-\d{2})?$'
                example: "2024-01-01,2024-12-31"
              end_date:
                type: string
                pattern: '^(\d{4}-\d{2}-\d{2})?,(\d{4}-\d{2}-\d{2})?$'

              # Simple array values
              categories:
                type: array
                items:
                  type: string
              tags:
                type: array
                items:
                  type: string
              regions:
                type: array
                items:
                  type: string

              # Enums
              discount_type:
                type: string
                enum: [PERCENTAGE_OFF, FIXED_AMOUNT, BOGO, FREE_SHIPPING]
              store_type:
                type: string
                enum: [online, in_store, both]

              # Simple string matches
              merchant_id:
                type: string
              merchant_name:
                type: string
              merchant_domain:
                type: string

              # Simple booleans
              is_expired:
                type: boolean
              is_stackable:
                type: boolean

        - name: sortBy
          in: query
          description: |
            Sort coupons by different criteria. Available options:
            - score:desc/asc: Sort by coupon score
            - created_at:desc/asc: Sort by when coupons were added (newest/oldest first)
            - end_date:desc/asc: Sort by expiration date (furthest/soonest expiring first)
            - discount_value:desc/asc: Sort by discount amount (highest/lowest savings first)
            - minimum_purchase_amount:desc/asc: Sort by minimum spend required
            - maximum_discount_amount:desc/asc: Sort by maximum possible savings
            - title:desc/asc: Sort alphabetically by coupon title
          schema:
            pattern: '^[a-zA-Z_]+:(asc|desc)$'
            type: string
            enum:
              - score:asc
              - score:desc
              - created_at:asc
              - created_at:desc
              - end_date:asc
              - end_date:desc
              - discount_value:asc
              - discount_value:desc
              - minimum_purchase_amount:asc
              - minimum_purchase_amount:desc
              - maximum_discount_amount:asc
              - maximum_discount_amount:desc
              - title:asc
              - title:desc
            default: score:desc

        - name: fuzzy
          in: query
          description: Wheather or not to allow typos in the search query. If you as provider don't support this, ignore this parameter.
          schema:
            type: boolean
            default: false

        - name: dateRange
          in: query
          description: |
            Date range for coupon validity (format: YYYY-MM-DD,YYYY-MM-DD)
          schema:
            type: string
            pattern: '^\d{4}-\d{2}-\d{2},\d{4}-\d{2}-\d{2}$'
            example: 2024-01-01,2024-12-31

        - name: searchIn
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - code
                - description
                - merchant_name
                - merchant_domain
                - title
                - categories
                - terms_conditions
            default: ["title", "description", "merchant_name", "merchant_domain"]
          style: form
          explode: false
          description: Specify which fields to search in.
          example: "title,description,merchant_name"
      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponSearchResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Suggest a new coupon
      tags:
        - coupons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponSuggestBody'
      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /syrup/v2/coupons/{coupon_id}:
    get:
      summary: Get a coupon by id
      tags:
        - coupons
      parameters:
        - name: coupon_id
          description: The id of the coupon
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /syrup/v2/coupons/{coupon_id}/reports:
    post:
      summary: Report if a coupon was valid or not
      tags:
        - coupons
      parameters:
        - name: coupon_id
          description: The id of the coupon
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoteBody'
      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /syrup/v2/coupons/{coupon_id}/history/votes:
    get:
      summary: Get the history of votes on a coupon
      tags:
        - coupons
      parameters:
        - name: coupon_id
          description: The id of the coupon
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponHistoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /syrup/v2/merchants:
    get:
      summary: Search for merchants
      tags:
        - merchants
      parameters:
        - name: q
          in: query
          schema:
            type: string
          description: Search query string

        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20

        - name: cursor
          in: query
          schema:
            type: string
          description: |
            Cursor for pagination. Use the next_cursor from the previous response to get the next page.
            Omit this parameter for the first page.
          example: eyJpZCI6MTAwfQ==

        - name: searchIn
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - name
                - domains
            default: ["name", "domains"]
          style: form
          explode: false
          description: Specify which fields to search in.
          example: "name,domains"

        - name: sortBy
          in: query
          schema:
            type: string
            enum:
              - created_at
              - id
            default: created_at
          description: Field to sort by for pagination purposes

      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantSearchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Suggest a new merchant
      tags:
        - merchants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantSuggestBody'
      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /syrup/v2/merchants/{merchant_id}:
    get:
      summary: Get a merchant by id
      tags:
        - merchants
      parameters:
        - name: merchant_id
          description: The id of the merchant
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Recommend a change to this merchant
      tags:
        - merchants
      parameters:
        - name: merchant_id
          description: The id of the merchant
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantSuggestBody'
      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /syrup/v2/autofill/{domain}:
    get:
      summary: Get the autofill selectors for a specific domain
      tags:
        - autofill
      parameters:
        - name: domain
          description: The domain of the website. (amazon.com)
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoFillResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Recommend a change to this autofill
      tags:
        - autofill
      parameters:
        - name: domain
          description: The domain of the website. (amazon.com)
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoFillBody'
      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoFillResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Suggest a new autofill
      tags:
        - autofill
      parameters:
        - name: domain
          description: The domain of the website. (amazon.com)
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoFillBody'
      responses:
        200:
          description: Success
          headers:
            X-RateLimit-Limit:
              description: The number of requests allowed in the current window
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoFillResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: |
                This indicates how long to wait before making a new request. (seconds)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  securitySchemes:
    bearerAuth:
      description: |
        Http bearer authorization.
        - This can be a JWT, or any other kind of token. The type of token used is left up to the implementation.
        - The means by which the token is distributed is left up to the implementation.
        - Whether this is used is left up to the implementation.
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKeyAuth:
      description: |
        Http api key header authorization using the `X-API-KEY` api key.
        - The means by which the token is distributed is left up to the implementation.
        - This should be a normal string token and not a JWT token.
        - Whether this is used is left up to the implementation.
      type: apiKey
      in: header
      name: X-Api-Key

  schemas:
    ErrorResponse:
      type: object
      required:
        - error
        - message
        - code
      properties:
        error:
          type: string
          description: |
            Short description or code of the error.
        message:
          type: string
          description: |
            A user friendly message to the user.
        code:
          type: string
          description: |
            Machine-readable error code for client handling.
          example: INVALID_COUPON_CODE
    InfoResponse:
      type: object
      required:
        - version
        - provider_name
        - auth
        - features
      properties:
        version:
          type: string
          description: |
            The API version in semantic format.
        provider_name:
          type: string
          description: |
            The name of the provider.
        auth:
          type: object
          description: |
            Information about the authentication process.
          required:
            - required
            - type
          properties:
            required:
              type: boolean
              description: |
                Whether or not to use authentication.
            type:
              type: string
              description: |
                Type of authentication
              enum:
                - none
                - bearer
                - api_key
            new_token:
              type: string
              description: |
                A token provided to the user for ease of use. This token will be automatically used for further requests as long as the user doesnt change it (optional)
        features:
          type: array
          description: |
            The available features
          items:
            type: string
            enum:
              - coupons_report
              - coupons_suggest
              - merchants_suggest
              - merchants_patch
              - autofill_suggest
              - autofill_patch
    CouponSearchResponse:
      type: object
      required:
        - data
        - count
        - total
        - has_more
      properties:
        data:
          type: array
          description: Array of coupons
          items:
            $ref: '#/components/schemas/Coupon'
        count:
          type: number
          description: Number of coupons returned
        total:
          type: number
          description: Total number of coupons found
        next_cursor:
          type: string
          description: Cursor to get the next page. Only present if has_more is true.
        has_more:
          type: boolean
          description: Whether there are more items available
        facets:
          type: object
          description: |
            Statistics about the search results broken down by key attributes. 
            Example: For 100 coupons found, facets might show:
            {
              "categories": {"electronics": 45, "clothing": 30, "food": 25},
              "discount_types": {"PERCENTAGE_OFF": 70, "FIXED_AMOUNT": 30}
            }
            This helps users understand result distribution and refine their filters.
          properties:
            categories:
              type: object
              additionalProperties:
                type: number
            discount_types:
              type: object
              additionalProperties:
                type: number
    CouponResponse:
      $ref: '#/components/schemas/Coupon'

    CouponHistoryResponse:
      type: object
      required:
        - id
        - up_votes
        - down_votes
      properties:
        id:
          type: integer
          description: Unique ID of the coupon
        up_votes:
          type: array
          description: Array of DateTime in ISO format at GMT0 for every up-vote
          items:
            type: string
            example: 2025-01-25T15:30:00
        down_votes:
          type: array
          description: Array of DateTime in ISO format at GMT0 for every down-vote
          items:
            type: string
            example: 2025-01-25T15:30:00

    MerchantSearchResponse:
      type: object
      required:
        - data
        - count
        - total
        - has_more
      properties:
        data:
          type: array
          description: Array of merchants
          items:
            $ref: '#/components/schemas/Merchant'
        count:
          type: number
          description: Number of merchants returned
        total:
          type: number
          description: Total number of merchants found
        next_cursor:
          type: string
          description: Cursor to get the next page. Only present if has_more is true.
        has_more:
          type: boolean
          description: Whether there are more items available

    MerchantResponse:
      $ref: '#/components/schemas/Merchant'

    AutoFillResponse:
      $ref: '#/components/schemas/AutoFillConfig'

    VoteBody:
      type: object
      required:
        - vote_type
      properties:
        vote_type:
          type: string
          enum:
            - negative
            - positive

    CouponSuggestBody:
      type: object
      required:
        - code
        - title
        - description
        - discount_value
        - discount_type
        - merchant_id
      properties:
        code:
          type: string
          description: The coupon code
        title:
          type: string
          description: Title of the code including simple description and amount
        description:
          type: string
          description: Long description of the code including simple conditions
        discount_value:
          type: number
          description: The discount amount or percentage
        discount_type:
          $ref: '#/components/schemas/DiscountType'
        merchant_id:
          type: string
          description: ID of the associated merchant
        start_date:
          type: string
          format: date-time
          description: When the coupon becomes valid (ISO format at GMT0)
        end_date:
          type: string
          format: date-time
          description: When the coupon expires (ISO format at GMT0)
        terms_conditions:
          type: string
          description: Explicit terms or conditions of usage
        minimum_purchase_amount:
          type: number
        maximum_discount_amount:
          type: number
        categories:
          type: array
          items:
            type: string
          description: General categories related to the coupon
        tags:
          type: array
          items:
            type: string
          description: Specific tags related to the coupon
        regions:
          type: array
          items:
            type: string
          description: Countries/regions where the coupon is valid
        store_type:
          type: string
          enum:
            - online
            - in_store
            - both
        is_stackable:
          type: boolean
          description: Whether the coupon can be combined with others

    MerchantSuggestBody:
      type: object
      required:
        - name
        - domains
      properties:
        name:
          type: string
          description: Name of the merchant
        domains:
          type: array
          description: Domains of this merchant. [apple.com, apple.uk, ...]
          items:
            type: string
            format: uri
        logo_url:
          type: string
          format: uri
        banner_url:
          type: string
          format: uri

    AutoFillBody:
      type: object
      required:
        - steps
        - validator
        - revertSelector
      properties:
        steps:
          type: array
          items:
            type: object
            required:
              - selector
              - action
            properties:
              selector:
                type: string
                description: CSS selector for the object
              action:
                type: string
                enum:
                  - click
                  - type_coupon
        validator:
          type: object
          required:
            - priceSelector
            - successSelector
            - failureSelector
            - timeout
          properties:
            priceSelector:
              type: string
              description: CSS selector to get the price
            priceRegex:
              type: string
              description: An optional regex to cut out the price
            successSelector:
              type: string
              description: CSS selector to an element that is visible on success
            failureSelector:
              type: string
              description: CSS selector to an element that is visible on failure
            timeout:
              type: number
              description: Time in ms to wait before the coupon timeouts and gets marked as invalide
        revertSelector:
          type: string
          description: CSS selector to an element to reset the coupon on click


    Coupon:
      type: object
      required:
        - id
        - created_at
        - code
        - title
        - description
        - discount_value
        - discount_type
        - merchant
        - score
      properties:
        id:
          type: integer
          description: Unique ID of the coupon
        created_at:
          type: string
          description: DateTime of coupon creation in ISO format at GMT0
          example: 2025-01-25T15:30:00
          format: date-time
        code:
          type: string
          description: The coupon code
        title:
          type: string
          description: Title of the code. Should include simple description and amount.
        description:
          type: string
          description: Long description of the code. Should include simple conditions.
        discount_value:
          type: number
        discount_type:
          $ref: '#/components/schemas/DiscountType'
        merchant:
          $ref: '#/components/schemas/Merchant'
        start_date:
          type: string
          description: From when on the coupon is valid in ISO format at GMT0
          example: 2025-01-25T15:30:00
          format: date-time
        end_date:
          type: string
          description: Until when the coupons is valid in ISO format at GMT0
          example: 2025-01-25T15:30:00
          format: date-time
        terms_conditions:
          type: string
          description: Explicit terms or conditions of usage.
        minimum_purchase_amount:
          type: number
        maximum_discount_amount:
          type: number
        up_votes:
          type: number
          description: |
            Number of up-votes. For a up-vote history see `/coupons/{coupon_id}/history/votes`
        down_votes:
          type: number
          description: |
            Number of down-votes. For a down-vote history see `/coupons/{coupon_id}/history/votes`
        categories:
          type: array
          description: Categories related to the coupon, categories are general categorisation
          items:
            type: string
        tags:
          type: array
          description: Tags related to the coupon, tags are specific categorisation
          items:
            type: string
        regions:
          type: array
          description: countries/regions where the coupon is valid
          items:
            type: string
        store_type:
          type: string
          enum:
            - online
            - in_store
            - both
        is_stackable:
          type: boolean
          description: Can be combined with other coupons
        score:
          type: number
          description: Score calculated by provider (higher = better coupon)
        metadata:
          type: object
          description: Custom key-value data
          additionalProperties: true

    DiscountType:
      type: string
      description: |
        (BOGO -> buy one get one)
      enum:
        - PERCENTAGE_OFF
        - FIXED_AMOUNT
        - BOGO
        - FREE_SHIPPING

    Merchant:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - name
        - domains
      properties:
        id:
          type: string
          description: Unique ID of the merchant
        created_at:
          type: string
          description: DateTime of coupon creation in ISO format at GMT0
          example: 2025-01-25T15:30:00
          format: date-time
        updated_at:
          type: string
          description: DateTime of coupon creation in ISO format at GMT0
          example: 2025-01-25T15:50:00
          format: date-time
        name:
          type: string
          description: Name of the merchant
        domains:
          type: array
          description: Domains of this merchant. [apple.com, apple.uk, ...]
          items:
            type: string
            format: uri
        logo_url:
          type: string
          format: uri
        banner_url:
          type: string
          format: uri

    AutoFillConfig:
      type: object
      required:
        - id
        - domain
        - steps
        - validator
        - revertSelector
      properties:
        id:
          type: string
          description: The ID of this auto-fill
        domain:
          type: string
          description: The Domain of the website
          format: uri
          example: amazon.com
        steps:
          type: array
          items:
            type: object
            required:
              - selector
              - action
            properties:
              selector:
                type: string
                description: CSS selector for the object
              action:
                type: string
                enum:
                  - click
                  - type_coupon
        validator:
          type: object
          required:
            - priceSelector
            - successSelector
            - failureSelector
            - timeout
          properties:
            priceSelector:
              type: string
              description: CSS selector to get the price
            priceRegex:
              type: string
              description: An optional regex to cut out the price
            successSelector:
              type: string
              description: CSS selector to an element that is visible on success
            failureSelector:
              type: string
              description: CSS selector to an element that is visible on failure
            timeout:
              type: number
              description: Time in ms to wait before the coupon timeouts and gets marked as invalide
        revertSelector:
          type: string
          description: CSS selector to an element to reset the coupon on click




security:
  - {}
  - bearerAuth: []
  - apiKeyAuth: []